name: Push

env:
  APP_NAME: certbot

on:
  push:
    branches:
      - master
    tags:
      - v*.*.*

jobs:
  build:
    name: Build & Push to GHCR
    runs-on: ubuntu-latest
    outputs:
      HAS_DOCKERHUB_SECRETS: ${{ steps.check-secrets.outputs.HAS_DOCKERHUB_SECRETS }}
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check Dockerhub Secrets
        id: check-secrets
        run: |
          echo "::set-output name=HAS_DOCKERHUB_SECRETS::${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}"
      - name: Build & Push to GHCR
        uses: ./.github/actions/build-push-container
        with:
          context: ./docker
          image_name: ${{ env.APP_NAME }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          token: ${{ secrets.GITHUB_TOKEN }}

  push-additional-registries:
    name: Push to Additional Registries
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.HAS_DOCKERHUB_SECRETS == 'true' && github.event_name != 'pull_request'
    strategy:
      matrix:
        # secrets cannot be accessed here
        # use the secret name here, but reference the secrets in the steps below
        include:
          - dest_registry: docker.io
            dest_username: DOCKERHUB_USERNAME
            dest_token: DOCKERHUB_TOKEN
            source_registry: ghcr.io
            source_username: ${{ github.repository_owner }}
            source_token: GITHUB_TOKEN
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Push to Registry
        uses: ./.github/actions/push-to-registry
        with:
          image_name: ${{ env.APP_NAME }}
          source_registry: ${{ matrix.source_registry }}
          source_username: ${{ matrix.source_username }}
          source_token: ${{ secrets[matrix.source_token] }}
          dest_registry: ${{ matrix.dest_registry }}
          dest_username: ${{ secrets[matrix.dest_username] }}
          dest_token: ${{ secrets[matrix.dest_token] }}
